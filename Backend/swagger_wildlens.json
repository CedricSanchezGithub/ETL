{
  "definitions": {},
  "info": {
    "description": "powered by Flasgger",
    "termsOfService": "/tos",
    "title": "A swagger API",
    "version": "0.0.1"
  },
  "paths": {
    "/api/especes": {
      "get": {
        "responses": {
          "200": {
            "description": "Retourne une liste des esp\u00e8ces",
            "schema": {
              "properties": {
                "especes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Liste des esp\u00e8ces"
      }
    },
    "/api/images": {
      "get": {
        "parameters": [
          {
            "description": "Nom fran\u00e7ais de l'esp\u00e8ce",
            "in": "query",
            "name": "espece",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "M\u00e9tadonn\u00e9es et images de l'esp\u00e8ce"
          },
          "400": {
            "description": "Param\u00e8tre 'espece' manquant"
          },
          "404": {
            "description": "Esp\u00e8ce introuvable"
          },
          "500": {
            "description": "Erreur serveur"
          }
        },
        "summary": "Images et informations d'une esp\u00e8ce",
        "tags": [
          "Esp\u00e8ces"
        ]
      }
    },
    "/api/metadata": {
      "get": {
        "responses": {
          "200": {
            "description": "Liste des m\u00e9tadonn\u00e9es de chaque esp\u00e8ce"
          },
          "500": {
            "description": "Erreur serveur"
          }
        },
        "summary": "R\u00e9cup\u00e9rer les m\u00e9tadonn\u00e9es de toutes les esp\u00e8ces",
        "tags": [
          "Esp\u00e8ces"
        ]
      }
    },
    "/images/{filename}": {
      "get": {
        "parameters": [
          {
            "description": "Chemin de l'image \u00e0 afficher",
            "in": "path",
            "name": "filename",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Image retourn\u00e9e"
          },
          "404": {
            "description": "Image non trouv\u00e9e"
          }
        },
        "summary": "Sert une image statique depuis le dossier d\u2019images",
        "tags": [
          "Images"
        ]
      }
    },
    "/interface": {
      "get": {
        "responses": {
          "200": {
            "description": "Interface HTML de gestion"
          }
        },
        "summary": "Interface HTML de test pour les fonctions ETL",
        "tags": [
          "Interface"
        ]
      }
    },
    "/photo_download": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "description": "Image class\u00e9e par le mod\u00e8le TFLite",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "description": "Nom de l'esp\u00e8ce d\u00e9tect\u00e9e",
            "in": "formData",
            "name": "classification",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Image enregistr\u00e9e avec succ\u00e8s"
          },
          "400": {
            "description": "Erreur de validation ou type de fichier incorrect"
          },
          "500": {
            "description": "Erreur serveur lors de l\u2019enregistrement"
          }
        },
        "summary": "Enregistrement d'une photo class\u00e9e par le front",
        "tags": [
          "Upload"
        ]
      }
    },
    "/triggermetadata": {
      "get": {
        "description": "Ce endpoint appelle un service externe pour lancer la cr\u00e9ation ou mise \u00e0 jour des m\u00e9tadonn\u00e9es. Il ne traite rien localement, mais renvoie l\u2019\u00e9tat du service appel\u00e9.\n",
        "responses": {
          "200": {
            "description": "Metadata d\u00e9clench\u00e9e avec succ\u00e8s"
          },
          "500": {
            "description": "\u00c9chec de communication avec le service externe"
          }
        },
        "summary": "Proxy : d\u00e9clenche une mise \u00e0 jour des m\u00e9tadonn\u00e9es sur un service externe",
        "tags": [
          "ETL"
        ]
      }
    },
    "/triggermspr": {
      "get": {
        "description": "Ce endpoint appelle un service externe (non inclus dans le conteneur Docker) pour d\u00e9clencher un traitement ETL. Il agit comme un proxy HTTP entre l\u2019interface et le vrai service ETL.\n",
        "responses": {
          "200": {
            "description": "Pipeline ETL d\u00e9clench\u00e9e avec succ\u00e8s"
          },
          "500": {
            "description": "\u00c9chec de communication avec le service externe"
          }
        },
        "summary": "Proxy : d\u00e9clenche manuellement le pipeline ETL sur un service externe",
        "tags": [
          "ETL"
        ]
      }
    }
  },
  "swagger": "2.0"
}
